# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Create application-dev.properties file
      run: |
        echo "spring.datasource.url=${{ secrets.SPRING_DATASOURCE_URL }}" >> src/main/resources/application-dev.properties
        echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> src/main/resources/application-dev.properties
        echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> src/main/resources/application-dev.properties
        echo "okta.oauth2.issuer=${{ secrets.OKTA_OAUTH2_ISSUER }}" >> src/main/resources/application-dev.properties
        echo "okta.oauth2.client-id=${{ secrets.OKTA_OAUTH2_CLIENT_ID }}" >> src/main/resources/application-dev.properties
        echo "okta.oauth2.client-secret=${{ secrets.OKTA_OAUTH2_CLIENT_SECRET }}" >> src/main/resources/application-dev.properties
        echo "okta.oauth2.audience=${{ secrets.OKTA_OAUTH2_AUDIENCE }}" >> src/main/resources/application-dev.properties
        echo "ui.base.url=${{ secrets.UI_BASE_URL }}" >> src/main/resources/application-dev.properties
        echo "auth.callback.url=${{ secrets.AUTH_CALLBACK_URL }}" >> src/main/resources/application-dev.properties
        echo "jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application-dev.properties

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=suvraneel/vishnu:latest
        docker build . --file Dockerfile --tag $IMAGE_TAG
        docker push $IMAGE_TAG

    - name: Deploy to Render
      run: curl -X GET ${{ secrets.RENDER_DEPLOY_HOOK }}